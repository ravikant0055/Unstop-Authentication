/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthIndexRouteImport } from './routes/_auth/index'
import { Route as ProtectedHomeRouteImport } from './routes/_protected/home'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'

const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/_auth/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedHomeRoute = ProtectedHomeRouteImport.update({
  id: '/_protected/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof AuthLoginRoute
  '/home': typeof ProtectedHomeRoute
  '/': typeof AuthIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof AuthLoginRoute
  '/home': typeof ProtectedHomeRoute
  '/': typeof AuthIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth/login': typeof AuthLoginRoute
  '/_protected/home': typeof ProtectedHomeRoute
  '/_auth/': typeof AuthIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/home' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/home' | '/'
  id: '__root__' | '/_auth/login' | '/_protected/home' | '/_auth/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  ProtectedHomeRoute: typeof ProtectedHomeRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/home': {
      id: '/_protected/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof ProtectedHomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  ProtectedHomeRoute: ProtectedHomeRoute,
  AuthIndexRoute: AuthIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
